openapi: 3.0.0
info:
  version: 1.0.0
  title: Seri Padi API
paths:
  /users/login:
    post:
      summary: Logs in a user
      description: Logs in a user with username and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: The username of the user.
                password:
                  type: string
                  format: password
                  description: The password of the user.
      responses:
        "200":
          description: Successful login
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
  /users:
    get:
      summary: Get all users
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      summary: Create a new User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /users/{id}:
    put:
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      summary: Update a user by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Table not found
  /tables:
    get:
      summary: Get all tables
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Table"
    post:
      summary: Create a new table
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Table"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Table"
  /tables/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get a table by ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Table"
        "404":
          description: Table not found
    put:
      summary: Update a table by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Table"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Table"
        "404":
          description: Table not found
    delete:
      summary: Delete a table by ID
      responses:
        "204":
          description: No Content
        "404":
          description: table not found
  /tables/check-availability:
    post:
      summary: Check if a table is available for booking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                requested_start:
                  type: string
                  format: date-time
                requested_end:
                  type: string
                  format: date-time
      responses:
        "200":
          description: Table availability status
          content:
            application/json:
              schema:
                type: object
                properties:
                  isAvailable:
                    type: boolean
        "500":
          description: Internal server errors
  /bookings:
    get:
      summary: Get all bookings.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Bookings"
  /bookings/create:
    post:
      summary: Create a new booking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bookings"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bookings"
components:
  schemas:
    Table:
      type: object
      properties:
        id_table:
          type: string
          readOnly: true
        table_num:
          type: string
        table_pax:
          type: string
        table_active:
          type: string
    User:
      type: object
      properties:
        ID_USER:
          type: string
          readOnly: true
        NAME:
          type: string
        USERNAME:
          type: string
        PASSWORD:
          type: string
          format: password
        EMAIL:
          type: string
        TEL_NO:
          type: string
    Bookings:
      type: object
      properties:
        id_booking:
          type: string
          readOnly: true
        id_user:
          type: string
        id_table:
          type: string
        booking_remarks:
          type: string
        booking_pax:
          type: string
        booking_date:
          type: string
          format: date-time
